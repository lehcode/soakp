USE_NODE_VERSION=16.20.0

# Domain of server for SSL certificate, e.g. example.com
#
# IMPORTANT!: MUST be valid public FQDN (Fully Qualified Domain Name)
# IMPORTANT!: Domain MUST be registered and have valid nameservers assigned
SERVER_HOST=sandrabeauty.studio

SERVER_PORT=

# Wildcard domain of server for SSL certificate, e.g. *.example.com
#
# IMPORTANT!: MUST start from comma if not empty
WILDCARD_DOMAIN=*.sandrabeauty.studio

AUTH_USERNAME=testuser

AUTH_PASSWORD=test_123

OPENAI_VERSION=

SERVERLESS=no

# Use `STORAGE_SQLITE` or `STORAGE_FILE` constants to specify storage type for
# persistent data.
STORAGE=STORAGE_SQLITE

# Database name if `sqlite` was selected as SRORAGE,
# not used otherwise
SQL_DB=

# Table name to store persistent data if `sqlite` was selected,
# otherwise not used
SQL_TABLE=

# Database file storage path
# Fill if file if used.
DATA_FILE_LOC=/tmp/

JWT_SECRET=cn6k1OkyNjXYzEfk

WORKDIR=/home/node/app

SSL_KEY_PATH=/home/node/.ssl/server.key

SSL_CERT_PATH=/home/node/.ssl/server.crt

# SSL certificate generation variables
MYCA_KEY_LEN=

# DAYS = 4 years + 1 day
MYCA_CERT_DAYS=1461

# Private key passphrase
MYCA_KEY_PASS=hbQUKRvvT0rQD6M38NT9NtYm

# Certificate authority CN. Any string
MYCA_ORG_CN="RootCA Org Ltd."

TIMEZONE=

HOST_USER_UID=

# Certbot version
CB_VERSION=2.6.0

# These command line flags required to agree with TOS
# User email can be any valid email
CB_AGREE_TOS="--agree-tos --email=admin@example.com"

# Comment to
CB_DRY_RUN="--dry-run"

# Certbot DNS challenges options
#
# route53
# ovh
# cloudflare
# digitalocean
# google
# rfc2136
# dnsimple
# linode
# dnsmadeeasy
# nsone
# luadns
# sakuracloud
# cloudxns
# gehirn
CB_DNS=route53

# Needs leading dot and slash to point to folder
LOCAL_KEYS_FOLDER=./docker/myca/certs

AWS_ACCESS_KEY_ID=AKIAWXS3ENDYWQQCFQXZ

AWS_SECRET_ACCESS_KEY=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

LINODE_CREDENTIALS_FILE=

DNS_DIGITALOCEAN_TOKEN=

DEBUG=yes

NODE_ENV=
