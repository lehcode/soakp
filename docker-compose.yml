version: "3.8"

# Description: This service runs the soakp server using the specified
# image and container configuration. It serves as the main component
# for running the soakp server.
services:
  server:
    image: lehcode/soakp:1.1.3
    container_name: ${CONTAINER_NAME:-soakp-server}
    hostname: ${SERVER_HOST:-soakp-server}
    command: /init.sh
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # The version of Node.js
        node_version: ${USE_NODE_VERSION:-16.20.0}
        # The Node.js environment
        node_env: ${NODE_ENV:-development}
        # Specifies whether to enable debugging
        debug: ${DEBUG:-yes}
        # The timezone used by the container
        tz: ${TZ:-Etc/UTC}
        # The username for basic HTTP Authentication
        auth_user: ${AUTH_USER:?}
        # The password for basic HTTP Authentication
        auth_pass: ${AUTH_PASS:?}
        # The user name of the container user
        host_user_name: ${HOST_USER_NAME:?}
        # The UID of the container user
        host_user_uid: ${HOST_USER_UID:?}
        host_user_gid: ${HOST_USER_GID:?}
        # The password for the node user
        host_user_pass: ${HOST_USER_PASS:?}
        host_docker_gid: ${HOST_DOCKER_GID:?}
        ssl_cert_dir: ${SSL_CERT_DIR:?}
    environment:
      # Specifies whether the server should be deployed in serverless mode.
      # Default is "no"
      SERVERLESS: ${SERVERLESS:-no}
      # The hostname for the server.
      # This variable needs to be provided
      SERVER_HOST: ${SERVER_HOST:?}
      # The storage type used by the server.
      # Default is "sqlite"
      STORAGE: sqlite
      # Specifies whether to use an in-memory SQLite database.
      # Default is "yes"
      SQLITE_MEMORY_DB: ${SQLITE_MEMORY_DB:-yes};
      # The name of the SQLite database file if file storage is used.
      # Default is "data.db"
      SQLITE_DB: ${SQLITE_DB:-data.db}
      # The name of the table in the SQLite database.
      # Default is "tokens"
      SQLITE_TABLE: ${SQLITE_TABLE:-tokens}
      # The directory where the SOAKP data files are located.
      # This variable needs to be provided
      DATA_DIR: ${DATA_DIR:?}
      # The name of the SQLite database file.
      # Default is "data.db"
      SQLITE_FILE: ${SQLITE_FILE:-data.db}
      # The secret key used for JWT token generation.
      # This variable needs to be provided
      JWT_SECRET: ${JWT_SECRET:?}
      # The root URL for the OpenAI API.
      # Default is "/v1"
      OPENAI_API_ROOT: ${OPENAI_API_ROOT:-/v1}
      # The organization ID for the OpenAI API.
      # This variable needs to be provided
      OPENAI_ORG_ID: ${OPENAI_ORG_ID:?}
      # Specifies whether to reset the SQLite database on startup.
      # Default is "no"
      SQLITE_RESET: ${SQLITE_RESET:-no}
    volumes:
      # Mounts the node_modules directory from the host
      - ./node_modules:/srv/soakp/node_modules
      # Mounts the src directory from the host
      - ./src:/srv/soakp/src
      # Mounts the configuration directory
      - ./docker/myca/generate/cert:${SSL_CERT_DIR:?}
      # Mounts the data directory
      - ./docker/server/lib/soakp:${DATA_DIR:?}
      # Mounts the log directory
      - ./docker/server/log:/var/log/soakp
    ports:
      # Forwards the specified server port to the host
      - "${SECURE_PORT:-3033}:${SECURE_PORT:-3033}"
      # Exposes the Node.js debugging port
      - "9229:9229"
    user: ${HOST_USER_NAME:?}:docker
    tty: true

  python:
    container_name: soakp-python
    hostname: pyapi
    build:
      context: ./pyapp
      args:
        python_version_tag: ${USE_PYTHON_VERSION:-latest}
        debug: ${DEBUG:-no}
    environment:
      PYTHON_API_PORT: ${PYTHON_API_PORT:-5000}
      ENV_TYPE: ${PYTHON_ENV:-development}
    volumes:
      - ./pyapp:/srv/soakp/python
    ports:
      - "${PYTHON_API_PORT:-5000}:${PYTHON_API_PORT:-5000}"

networks:
  soakp_network:
    ipam:
      driver: default
      config:
        - subnet: 172.16.222.0/24

