version: "3.8"

# Chatbot: add file description
services:
  # Chatbot: add service description
  server:
    image: lehcode/openai-proxy:1.0.1
    container_name: ${CONTAINER_NAME:-openai-proxy}
    hostname: ${SERVER_HOST:-openai-proxy}
    entrypoint: /init.sh
    build:
      context: .
      dockerfile: docker/server/Dockerfile
      args:
        workdir: ${WORKDIR:-/srv}
        node_version: ${USE_NODE_VERSION:-16.20.0}
        node_env: ${NODE_ENV:-development}
        debug: ${DEBUG:-yes}
        tz: ${TZ:-Etc/UTC}
        auth_user: ${AUTH_USERNAME:?}
        auth_pass: ${AUTH_PASSWORD:?}
    environment:
      SERVER_PORT: ${SERVER_PORT:-3000}
      SERVERLESS: ${SERVERLESS:-no}
      SERVER_HOST: ${SERVER_HOST:?}
      STORAGE: ${STORAGE:-sqlite}
      SQL_DB_NAME: ${SQL_DB_NAME:-data.db}
      SQL_TABLE: ${SQL_TABLE_NAME:-tokens}
      DATA_FILE: ${FILE_STORAGE_PATH:-/etc}/${DATA_FILE:-.data.txt}
    volumes:
      - ./node_modules:${WORKDIR:-/srv}/node_modules
      - ${LOCAL_KEYS_FOLDER:?}:/etc/ssl/certs/
    ports:
      - "${SERVER_PORT:-3777}:${SERVER_PORT:-3777}"
      - "9229:9229"
    user: node:node

  # Certbot service
  #
  # Chatbot: add service description
  certbot:
    image: "certbot/dns-${CB_DNS:?}:v${CB_VERSION:?}"
    entrypoint: certbot certonly -n -d ${SERVER_HOST:?}${WILDCARD_DOMAIN} --dns-${CB_DNS:?} ${CB_DRY_RUN} ${CB_AGREE_TOS}
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      LINODE_CREDENTIALS_FILE: ${LINODE_CREDENTIALS_FILE:-~/.linode}
      DNS_DIGITALOCEAN_TOKEN: ${DNS_DIGITALOCEAN_TOKEN}
    volumes:
      - ./docker/certbot/etc/letsencrypt:/etc/letsencrypt
      - ${LOCAL_KEYS_FOLDER:?}:/var/lib/letsencrypt
      - ./docker/certbot/var/log/letsencrypt:/var/log/letsencrypt

  # SSL service
  #
  # On 1st run generates SSL certificate self-signed with user-specified CA.
  # Then they're available for server to mount from `docker/ssl/certs` folder.
  #
  # Chatbot: rewrite existing service description if needed
  myca:
    # image: lehcode/ssl-ca-certs:latest
    build:
      context: docker/myca/
      args:
        debug: ${DEBUG:-yes}
        key_len: ${KEY_LEN:-4096}
        days: ${CERT_DAYS:-365}
        ca_cn: ${MYCA_ORG_CN:-CAuth}
        server_cn: ${SERVER_HOST:?}
        host_user_uid: ${HOST_USER_UID:-1001}
        key_pass: ${MYCA_KEY_PASS}
    volumes:
      - ${LOCAL_KEYS_FOLDER:?}:/etc/ssl/certs/
